---
- name: Get Nautobot service accounts from Password-safe
  pwsafe_credentials:
    project_id: "{{ users_project_id }}"
    usernames: "{{ users_names }}"
    env: "dev"
  register: pwsafe_credentials_result

- name: Create missing service accounts in Password Safe
  ansible.builtin.uri:
    url: "{{ password_safe_url }}/projects/{{ users_project_id }}/credentials"
    method: POST
    headers:
      Accept: "application/json"
      X-AUTH-TOKEN: "{{ identity_token }}"
    body_format: json
    body:
      credential:
        category: "Service Accounts"
        description: "dev nautobot {{ item }} user"
        hostname: "{{ nautobot_url }}"
        username: "{{ item }}"
        password: "{{ {'token': lookup('ansible.builtin.password', '/dev/null length=40 chars=ascii_letters,digits'),
        'password': lookup('ansible.builtin.password', '/dev/null length=12 chars=ascii_letters,digits')} | to_json }}`"
    status_code: 201
  loop: "{{ pwsafe_credentials_result.missing_usernames | default([]) }}"
  register: created_credentials
  when:
    - not (pwsafe_credentials_result.all_credentials_found | default(true))
    - pwsafe_credentials_result.missing_usernames | default([]) | length > 0

- name: Initialize new credentials list
  ansible.builtin.set_fact:
    new_credentials: []
  when: created_credentials is defined and created_credentials.results is defined

- name: Extract credentials from newly created entries
  ansible.builtin.set_fact:
    new_credentials: "{{ new_credentials + [parsed_credential] }}"
  vars:
    credential_data: "{{ item.json.credential }}"
    password_json: "{{ credential_data.password | from_json }}"
    parsed_credential:
      username: "{{ credential_data.username }}"
      token: "{{ password_json.token }}"
      password: "{{ password_json.password }}"
  loop: "{{ created_credentials.results }}"
  when:
    - created_credentials is defined
    - created_credentials.results is defined
    - item.json.credential is defined

- name: Combine all credentials
  ansible.builtin.set_fact:
    all_credentials: >-
      {{
        (pwsafe_credentials_result.credentials | default([])) +
        (new_credentials | default([]))
      }}

- name: Ensure users exist in Nautobot
  ansible.builtin.uri:
    url: "{{ nautobot_url }}/api/users/users/"
    method: POST
    headers:
      Authorization: "Token {{ nautobot_token }}"
    body_format: json
    body:
      username: "{{ item.username }}"
      password: "{{ item.password }}"
      is_staff: true
      is_superuser: true
    status_code: [201, 400]  # created or already exists
  loop: "{{ all_credentials }}"
  when: all_credentials | length > 0

- name: Create User tokens in Nautobot
  ansible.builtin.uri:
    url: "{{ nautobot_url }}/api/users/tokens/"
    method: POST
    url_username: "{{ item.username }}"
    url_password: "{{ item.password }}"
    force_basic_auth: true
    body_format: json
    body:
      key: "{{ item.token }}"
    status_code: [201, 400]  # created or already exists
  loop: "{{ all_credentials }}"
  when: all_credentials | length > 0
