---
# Source: nautobot/templates/nautobot-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nautobot-default
  namespace: "nautobot"
  labels:
    app.kubernetes.io/name: nautobot
    helm.sh/chart: nautobot-2.0.5
    app.kubernetes.io/instance: nautobot
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2.0.5"
    app.kubernetes.io/component: nautobot-default
spec:
  replicas: 2
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nautobot
      app.kubernetes.io/instance: nautobot
      app.kubernetes.io/component: nautobot-default
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nautobot
        helm.sh/chart: nautobot-2.0.5
        app.kubernetes.io/instance: nautobot
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "2.0.5"
        app.kubernetes.io/component: nautobot-default
    spec:
      serviceAccountName: nautobot

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: nautobot
                    app.kubernetes.io/name: nautobot
                    app.kubernetes.io/component: nautobot-default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        # This init container will run post_upgrade which initializes/upgrades the DB as well as collects static files
        - name: nautobot-init
          image: ghcr.io/nautobot/nautobot:2.1.1-py3.11
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 999
            runAsUser: 999
          args:
            - "echo"
            - "Nautobot Initialization Done"
          env:
            - name: NAUTOBOT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nautobot-pguser-nautobot
                  key: password
            - name: NAUTOBOT_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nautobot-redis
                  key: redis-password
          envFrom:
            - configMapRef:
                name: nautobot-env
            - secretRef:
                name: nautobot-env
          resources:
            limits:
              cpu: 1000m
              memory: 8704M
            requests:
              cpu: 300m
              memory: 1280M
          volumeMounts:
            - name: "nautobot-static"
              mountPath: "/opt/nautobot/static"
            - name: "git-repos"
              mountPath: "/opt/nautobot/git"
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/uwsgi.ini"
              subPath: "uwsgi.ini"
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/nautobot_config.py"
              subPath: "nautobot_config.py"
            - name: "nautobot-dexauth"
              mountPath: "/opt/nautobot/dexauth.py"
              subPath: "dexauth.py"
              readOnly: true
            - name: "nautobot-dex-creds"
              mountPath: "/opt/nautobot/dex_client_secret"
              subPath: client-secret
              readOnly: true
      containers:
        - name: nautobot
          tty: true
          image: ghcr.io/nautobot/nautobot:2.1.1-py3.11
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 999
            runAsUser: 999
          command:
            - nautobot-server
            - start
            - --ini
            - /opt/nautobot/uwsgi.ini
          env:
            - name: "NAUTOBOT_K8S_COMPONENT"
              value: "nautobot-default"
            - name: NAUTOBOT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nautobot-pguser-nautobot
                  key: password
            - name: NAUTOBOT_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nautobot-redis
                  key: redis-password
          envFrom:
            - configMapRef:
                name: nautobot-env
            - secretRef:
                name: nautobot-env
          resources:
            limits:
              cpu: 1000m
              memory: 8704M
            requests:
              cpu: 300m
              memory: 1280M
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/
              port: http
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/
              port: http
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: "nautobot-static"
              mountPath: "/opt/nautobot/static"
            - name: "git-repos"
              mountPath: "/opt/nautobot/git"
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/uwsgi.ini"
              subPath: "uwsgi.ini"
            - name: "nautobot-config"
              mountPath: "/opt/nautobot/nautobot_config.py"
              subPath: "nautobot_config.py"
            - name: "nautobot-dexauth"
              mountPath: "/opt/nautobot/dexauth.py"
              subPath: "dexauth.py"
              readOnly: true
            - name: "nautobot-dex-creds"
              mountPath: "/opt/nautobot/dex_client_secret"
              subPath: client-secret
              readOnly: true
          ports:
            - name: "https"
              containerPort: 8443
            - name: "http"
              containerPort: 8080

      terminationGracePeriodSeconds: 30
      volumes:
        - name: "nautobot-static"
          emptyDir: {}
        - name: "git-repos"
          emptyDir: {}
        - name: "nautobot-config"
          configMap:
            name: nautobot-config
        - name: "nautobot-dexauth"
          configMap:
            name: dexauth
        - name: "nautobot-dex-creds"
          secret:
            secretName: nautobot-sso
            optional: false
