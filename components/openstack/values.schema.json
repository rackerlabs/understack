{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OpenStack Helm Chart Values",
  "description": "Schema for OpenStack component values.yaml configuration",
  "type": "object",
  "properties": {
    "regionName": {
      "type": "string",
      "description": "OpenStack region that this deployment corresponds to"
    },
    "keystoneUrl": {
      "type": "string",
      "default": "http://keystone-api.openstack.svc.cluster.local:5000/v3",
      "description": "Keystone API URL for OpenStack authentication"
    },
    "externalSecretsRefreshInterval": {
      "type": "string",
      "pattern": "^[0-9]+(s|m|h|d)",
      "default": "1h",
      "description": "How often External Secrets Operator refreshes each secret"
    },
    "mariadb": {
      "type": "object",
      "description": "OpenStack mariadb instance settings",
      "properties": {
        "rootPasswordSecretKeyRef": {
          "type": "object",
          "description": "Root password settings",
          "properties": {
            "name": {
              "type": "string",
              "description": "Secret name containing the root password"
            },
            "key": {
              "type": "string",
              "description": "Key within the secret containing the password"
            },
            "generate": {
              "type": "boolean",
              "description": "Whether to generate the password if it doesn't exist"
            }
          },
          "required": ["name", "key"],
          "additionalProperties": false
        },
        "storage": {
          "type": "object",
          "description": "Storage settings",
          "properties": {
            "size": {
              "type": "string",
              "pattern": "^[0-9]+(Gi|G|Mi|M|Ki|K)$",
              "description": "Storage size (e.g., 10Gi)"
            },
            "resizeInUseVolumes": {
              "type": "boolean",
              "description": "Enable resizing volumes while in use"
            },
            "waitForVolumeResize": {
              "type": "boolean",
              "description": "Wait for volume resize to complete"
            },
            "volumeClaimTemplate": {
              "type": "object",
              "description": "Volume claim template configuration",
              "properties": {
                "storageClassName": {
                  "type": "string",
                  "description": "Storage class name for the volume"
                },
                "accessModes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"]
                  },
                  "description": "Access modes for the volume"
                },
                "resources": {
                  "type": "object",
                  "properties": {
                    "requests": {
                      "type": "object",
                      "properties": {
                        "storage": {
                          "type": "string",
                          "pattern": "^[0-9]+(Gi|G|Mi|M|Ki|K)$",
                          "description": "Storage request size"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "galera": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable or disable Galera"
            },
            "sst": {
              "type": "string",
              "description": "State Snapshot Transfer method"
            },
            "replicaThreads": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of replica threads"
            },
            "agent": {
              "type": "object",
              "properties": {
                "port": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 65535,
                  "description": "Agent port number"
                },
                "kubernetesAuth": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Enable Kubernetes authentication for the agent"
                    }
                  },
                  "required": ["enabled"],
                  "additionalProperties": true
                }
              },
              "required": ["port", "kubernetesAuth"],
              "additionalProperties": true
            },
            "recovery": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable recovery"
                },
                "clusterHealthyTimeout": {
                  "type": "string",
                  "pattern": "^\\d+(s|m|h)$",
                  "description": "Cluster healthy timeout duration (e.g., '2m')"
                },
                "clusterBootstrapTimeout": {
                  "type": "string",
                  "pattern": "^\\d+(s|m|h)$",
                  "description": "Cluster bootstrap timeout duration (e.g., '10m')"
                }
              },
              "required": ["enabled", "clusterHealthyTimeout", "clusterBootstrapTimeout"],
              "additionalProperties": true
            },
            "config": {
              "type": "object",
              "properties": {
                "reuseStorageVolume": {
                  "type": "boolean",
                  "description": "Reuse existing storage volume"
                },
                "volumeClaimTemplate": {
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Volume access modes"
                    },
                    "resources": {
                      "type": "object",
                      "properties": {
                        "requests": {
                          "type": "object",
                          "properties": {
                            "storage": {
                              "type": "string",
                              "description": "Storage request size"
                            }
                          },
                          "required": ["storage"],
                          "additionalProperties": true
                        }
                      },
                      "required": ["requests"],
                      "additionalProperties": true
                    },
                    "storageClassName": {
                      "type": "string",
                      "description": "Storage class name for the volume claim"
                    }
                  },
                  "required": ["accessModes", "resources"],
                  "additionalProperties": true
                }
              },
              "required": ["reuseStorageVolume", "volumeClaimTemplate"],
              "additionalProperties": true
            }
          },
          "required": [
            "enabled", "sst", "replicaThreads", "agent",
            "recovery", "config"
          ],
          "additionalProperties": true
        },
        "replicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of MariaDB replicas (Galera cluster size)"
        }
      },
      "additionalProperties": false
    },
    "rabbitmq": {
      "type": "object",
      "description": "OpenStack RabbitMQ instance settings",
      "properties": {
        "persistence": {
          "type": "object",
          "description": "Storage persistence settings",
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "keystoneServiceUsers": {
      "type": "object",
      "description": "OpenStack service users for OpenStack Helm charts",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables or disables loading OpenStack service users via External Secrets Operator"
        },
        "secretStore": {
          "type": "object",
          "description": "External Secrets Operator Secret Store configuration",
          "properties": {
            "kind": {
              "type": "string",
              "enum": ["ClusterSecretStore", "SecretStore"],
              "description": "Type of secret store - ClusterSecretStore or SecretStore for namespaced"
            },
            "name": {
              "type": "string",
              "description": "Name of the ClusterSecretStore or SecretStore to use"
            }
          },
          "required": ["kind", "name"],
          "additionalProperties": false
        },
        "externalLinkAnnotationTemplate": {
          "type": "string",
          "description": "Optional template for external link annotations on ExternalSecret resources"
        },
        "keystoneInterface": {
          "type": "string",
          "default": "internal",
          "description": "OpenStack service catalog interface to use"
        },
        "services": {
          "type": "object",
          "description": "Service users organized by service name",
          "patternProperties": {
            "^[a-zA-Z0-9_-]+$": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "usage": {
                    "type": "string",
                    "description": "Usage identifier for the service user"
                  },
                  "remoteRef": {
                    "type": "string",
                    "description": "Credential identifier"
                  },
                  "section": {
                    "type": "string",
                    "description": "Configuration section name"
                  },
                  "project_domain_name": {
                    "type": "string",
                    "description": "Domain name where this service account will access a project"
                  },
                  "project_name": {
                    "type": "string",
                    "description": "Project name that this service account will access"
                  }
                },
                "required": [
                  "usage",
                  "remoteRef"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "extraObjects": {
      "type": "array",
      "description": "Array of extra Kubernetes manifests to deploy",
      "items": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "Kubernetes API version"
          },
          "kind": {
            "type": "string",
            "description": "Kubernetes resource kind"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "namespace": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "spec": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": ["apiVersion", "kind"],
        "additionalProperties": true
      }
    }
  },
  "required": ["regionName"],
  "additionalProperties": false
}
