---
release_group: null

conf:
  horizon:
    local_settings:
      config:
        debug: "False"
        endpoint_type: "publicURL"
        use_ssl: "True"
        csrf_cookie_secure: "True"
        session_cookie_secure: "True"
        session_cookie_httponly: "True"
        allowed_hosts:
          - '*'
    local_settings_d:
      # Set default options when creating a server from the
      # horizon UI for a more friendly and efficient user experience.
      # https://docs.openstack.org/horizon/latest/configuration/settings.html#launch-instance-defaults
      _40_launch_instance_settings: |
        LAUNCH_INSTANCE_DEFAULTS = {
            "config_drive": True,
            "create_volume": False,
            "hide_create_volume": False,
            "disable_image": False,
            "disable_instance_snapshot": False,
            "disable_volume": False,
            "disable_volume_snapshot": False,
            "enable_scheduler_hints": True,
            "enable_metadata": True,
            "enable_net_ports": True,
            "default_availability_zone": "Any",
        }

endpoints:
  dashboard:
    host_fqdn_override:
      public:
        tls:
          secretName: keystone-tls-public
          issuerRef:
            name: understack-cluster-issuer
            kind: ClusterIssuer

network:
  # configure OpenStack Helm to use Undercloud's ingress
  # instead of expecting the ingress controller provided
  # by OpenStack Helm
  use_external_ingress_controller: true
  dashboard:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        # set our default issuer
        cert-manager.io/cluster-issuer: understack-cluster-issuer

# (nicholas.kuechler) updating the jobs list to remove the 'horizon-db-init' job.
dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs: null
  static:
    db_sync:
      jobs:

manifests:
  job_db_init: false
  secret_db: false
  service_ingress: false

pod:
  lifecycle:
    disruption_budget:
      horizon:
        # this should be set to no more than (pod.replicas.horizon - 1)
        # usually set on per-deployment basis.
        min_available: 0

annotations:
  # we need to modify the annotations on OpenStack Helm
  # jobs because they use helm.sh/hooks: post-install,post-upgrade
  # which means they will get applied in the post phase which
  # is after the API deployment. With standard helm this works
  # out because it just orders how things are applied but with
  # ArgoCD it will wait until the sync phase is successful.
  # Unfortunately the API deployments need several jobs to occur
  # before it will go successful like creating the keystone user,
  # service, endpoints and syncing the DB. These jobs also have
  # a helm.sh/hook-weight to order them which is good but by moving
  # them to the sync phase the weight is now wrong with resources
  # they depend on like secrets and configmaps so we need to
  # override them to 0 because there is no way in OpenStack Helm
  # to set annotations on deployments and daemonssets nicely.
  # Other jobs might need to be moved as well. We do this by
  # moving them to the sync phase. Additionally since the jobs
  # are using fixed names and not generated names for each run
  # ArgoCD attempts to edit them but they have immutable fields
  # so we must force the replacement instead of attempting to diff them.
  # Lastly the hook-delete-policy controls the finalizer which
  # prevents the deletion of the job. In this case we're saying
  # the old job needs to be removed before applying the new one
  # which gets around the immutable case above.
  job:
    horizon_db_sync:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
      argocd.argoproj.io/sync-wave: "0"
