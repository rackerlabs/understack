---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: ironic-oslo-inspecting-event
  annotations:
    workflows.argoproj.io/title: Process oslo_events for ironic project
    workflows.argoproj.io/description: |+
      Triggers on the following Ironic Events:

      - baremetal.node.provision_set.end which happens after a state change on the node

      Resulting code should be very similar to:

      ```
      argo -n argo-events submit --from workflowtemplate/openstack-oslo-event \
      -p event-json "JSON-payload" -p device_id=<UUID> -p project_id=<UUID>
      ```

      Defined in `workflows/argo-events/sensors/sensor-ironic-oslo-inspecting-event.yaml`
spec:
  dependencies:
  - eventName: openstack
    eventSourceName: openstack-ironic
    name: ironic-dep
    transform:
      # the event is a string-ified JSON so we need to decode it
      # replace the whole event body
      jq: |
        (
        .body = (.body["oslo.message"] | fromjson) |
        .body.ironic_object = .body.payload["ironic_object.data"]
        )
    filters:
      # applies each of the items in data with 'and' but there's only one
      dataLogicalOperator: "and"
      data:
        - path: "body.event_type"
          type: "string"
          value:
            - "baremetal.node.provision_set.end"
        - path: "body.ironic_object.previous_provision_state"
          type: "string"
          value:
            - "inspecting"
  template:
    serviceAccountName: sensor-submit-workflow
  triggers:
    - template:
        name: update-nautobot
        k8s:
          operation: create
          parameters:
            # first parameter is the parsed oslo.message
            - dest: spec.arguments.parameters.0.value # event-json
              src:
                dataKey: body
                dependencyName: ironic-dep
          source:
            # create a workflow in argo-events prefixed with ironic-prov-
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: update-nautobot-
                namespace: argo-events
              spec:
                serviceAccountName: workflow
                entrypoint: main
                # defines the parameters being replaced above
                arguments:
                  parameters:
                    - name: event-json
                templates:
                - name: main
                  steps:
                  - - name: oslo-events
                      templateRef:
                        name: update-nautobot-on-openstack-oslo-event
                        template: main
                      arguments:
                        parameters:
                        - name: event-json
                          value: "{{workflow.parameters.event-json}}"
