---
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
  # We are wanting to limit the scope and access down to
  # just the namespaces we want to give access for workflows
  # to run and the argo-server to be able to see workflows and
  # argo events so we need to split up what we install. So
  # we delete the ClusterRoleBinding and instead create RoleBindings
  # to the ClusterRole for just the namespaces we want.
  - https://github.com/argoproj/argo-workflows/manifests/cluster-install/?ref=v3.7.2

  # adds argo-server role so the argo-server has enough permissions to run
  - argo-server-role.yaml
  - argo-server-rolebinding.yaml

  # external secret for SSO auth
  - external-secret-argo-sso.yaml

# keep all the images consistent
images:
  - name: quay.io/argoproj/workflow-controller
    newTag: v3.7.2
  - name: quay.io/argoproj/argoexec
    newTag: v3.7.2
  - name: quay.io/argoproj/argocli
    newTag: v3.7.2

patches:
- target:
    group: rbac.authorization.k8s.io
    version: v1
    kind: ClusterRoleBinding
    name: argo-binding
  path: delete-workflow-controller-crb.yaml

- target:
    group: rbac.authorization.k8s.io
    version: v1
    kind: Role
    name: argo-role
  path: workflow-controller-role.yaml

# see the patch for details on the change
- target:
    group: apps
    version: v1
    kind: Deployment
    name: argo-server
  path: ./argo-server-deployment.yaml

# see the patch for details on the change
- target:
    group: apps
    version: v1
    kind: Deployment
    name: workflow-controller
  path: ./workflow-controller-deployment.yaml

# apply our configuration changes to the configmap
configMapGenerator:
  - name: workflow-controller-configmap
    behavior: merge
    files:
      - workflowDefaults=workflow-defaults
