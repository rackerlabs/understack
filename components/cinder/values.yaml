---
release_group: null

conf:
  backends:
    # disable the hardcoded one in the OpenStack Helm values.yaml
    rbd1: null
  cinder:
    DEFAULT:
      enabled_backends: netapp_nvme
      default_volume_type: netapp_nvme
      # add DriverFilter to the default list so our SVM filtering function gets called
      scheduler_default_filters: DriverFilter,AvailabilityZoneFilter,CapacityFilter,CapabilitiesFilter

# typically overridden by environmental
# values, but should include all endpoints
# required by this chart
endpoints:
  oslo_messaging:
    statefulset:
      replicas: 3
      name: rabbitmq-server
    hosts:
      default: rabbitmq-nodes
  volumev3:
    port:
      api:
        public: 443
    scheme:
      public: https
    path:
      # since the Yoga release it is not necessary to include the tenant_id
      # in the URL
      default: '/v3'
    host_fqdn_override:
      public:
        tls:
          secretName: cinder-tls-public
          issuerRef:
            name: understack-cluster-issuer
            kind: ClusterIssuer


network:
  # configure OpenStack Helm to use Undercloud's ingress
  # instead of expecting the ingress controller provided
  # by OpenStack Helm
  use_external_ingress_controller: true
  api:
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        # set our default issuer
        cert-manager.io/cluster-issuer: understack-cluster-issuer

pod:
  mounts:
    cinder_volume:
      cinder_volume:
        # necessary because the netapp driver requires this for scratch space
        # and even makes sure its writeable a better approach should go upstream
        volumeMounts:
          - mountPath: /var/lib/cinder
            name: var-lib-cinder
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: var-lib-cinder
            emptyDir: {}
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
                - secret:
                    name: cinder-netapp-config
                    items:
                      - key: netapp_nvme.conf
                        path: netapp_nvme.conf
    cinder_volume_usage_audit:
      cinder_volume_usage_audit:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
    cinder_db_sync:
      cinder_db_sync:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
    cinder_backup:
      cinder_backup:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
    cinder_scheduler:
      cinder_scheduler:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
    cinder_db_purge:
      cinder_db_purge:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
    cinder_api:
      cinder_api:
        volumeMounts:
          - name: cinder-etc-snippets
            mountPath: /etc/cinder/cinder.conf.d/
            readOnly: true
        volumes:
          - name: cinder-etc-snippets
            projected:
              sources:
                - secret:
                    name: cinder-ks-etc
  lifecycle:
    disruption_budget:
      deployments:
        # this should be set to no more than (pod.replicas.server - 1)
        # usually set on per-deployment basis.
        min_available: 0
  resources:
    enabled: true

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs: null
  static:
    api:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints
      services:
        - endpoint: internal
          service: oslo_db
        - endpoint: internal
          service: identity
    db_sync:
      jobs:
    backup:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints
    db_purge:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints
    scheduler:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints
    volume:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints
    volume_usage_audit:
      jobs:
        - cinder-db-sync
        - cinder-ks-user
        - cinder-ks-endpoints

manifests:
  job_backup_storage_init: false
  job_bootstrap: false
  job_clean: false
  job_db_init: false
  job_db_drop: false
  job_rabbit_init: false
  job_storage_init: false
  pod_rally_test: false
  secret_db: false
  secret_ingress_tls: false
  secret_rabbitmq: false
  secret_registry: false
  service_ingress_api: false
  deployment_backup: false
  # We set the `secret_keystone` and `secret_ks_etc` to false in order to disable
  # Kubernetes section generation in OpenStack Helm, because we want those
  # to be generated indirectly via ESO as configured in keystoneServiceUsers.enabled
  # that is later consumed via components/openstack helm chart
  secret_keystone: false
  secret_ks_etc: false
  # less than ideal but currently necessary due to the way the chart
  # hardcodes the config-file flag which then causes oslo.config to prefer
  # that data over the directory which we want to override
  configmap_bin: false

annotations:
  # we need to modify the annotations on OpenStack Helm
  # jobs because they use helm.sh/hooks: post-install,post-upgrade
  # which means they will get applied in the post phase which
  # is after the API deployment. With standard helm this works
  # out because it just orders how things are applied but with
  # ArgoCD it will wait until the sync phase is successful.
  # Unfortunately the API deployments need several jobs to occur
  # before it will go successful like creating the keystone user,
  # service, endpoints and syncing the DB. These jobs also have
  # a helm.sh/hook-weight to order them which is good but by moving
  # them to the sync phase the weight is now wrong with resources
  # they depend on like secrets and configmaps so we need to
  # override them to 0 because there is no way in OpenStack Helm
  # to set annotations on deployments and daemonssets nicely.
  # Other jobs might need to be moved as well. We do this by
  # moving them to the sync phase. Additionally since the jobs
  # are using fixed names and not generated names for each run
  # ArgoCD attempts to edit them but they have immutable fields
  # so we must force the replacement instead of attempting to diff them.
  # Lastly the hook-delete-policy controls the finalizer which
  # prevents the deletion of the job. In this case we're saying
  # the old job needs to be removed before applying the new one
  # which gets around the immutable case above.
  job:
    cinder_db_sync:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
      argocd.argoproj.io/sync-wave: "0"
    cinder_ks_service:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
      argocd.argoproj.io/sync-wave: "0"
    cinder_ks_user:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
      argocd.argoproj.io/sync-wave: "0"
    cinder_ks_endpoints:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
      argocd.argoproj.io/sync-wave: "0"
    cinder_create_internal_tenant:
      argocd.argoproj.io/hook: Sync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
      argocd.argoproj.io/sync-options: Force=true
