---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: bmc-password
  annotations:
    workflows.argoproj.io/title: Workflow to obtain standard BMC Password
    workflows.argoproj.io/description: |
      Defined in `workflows/argo-events/workflowtemplates/bmc-password.yaml`

      ```
      argo -n argo-events submit --from workflowtemplate/bmc-password -p ip_address=10.46.96.163
      ```
spec:
  serviceAccountName: workflow
  entrypoint: main
  arguments:
    parameters:
      - name: ip_address
  templates:
    - name: main
      steps:
        - - name: bmc-password
            template: bmc-password
            arguments:
              parameters:
                - name: ip_address
                  value: "{{workflow.parameters.ip_address}}"

    - name: bmc-password
      inputs:
        parameters:
          - name: ip_address
      container:
        image: ghcr.io/rackerlabs/understack/ironic-nautobot-client:latest
        command:
          - /bin/sh
          - -c
        args:
          - |
            python3 -c "
            import sys
            import os

            from understack_workflows.bmc_password_standard import standard_password

            bmc_ip = '{{inputs.parameters.ip_address}}'

            if os.getenv('BMC_MASTER') is None:
                print('Please set the BMC_MASTER environment variable', file=sys.stderr)
                exit(1)

            password = standard_password(str(bmc_ip), str(os.getenv('BMC_MASTER')))
            print(password)
            "
        env:
          - name: BMC_MASTER
            valueFrom:
              secretKeyRef:
                name: bmc-master
                key: key
