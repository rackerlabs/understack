---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  finalizers:
  - sensor-controller
  labels:
    argocd.argoproj.io/instance: argo-events
  name: ironic-node-update
  namespace: argo-events
  annotations:
    workflows.argoproj.io/description: |
      Defined in `workflows/argo-events/sensors/ironic-node-update.yaml`
spec:
  dependencies:
  - eventName: openstack
    eventSourceName: openstack-amqp
    name: ironic-dep
    transform:
      jq: ".body[\"oslo.message\"] | fromjson"
    filters:
      dataLogicalOperator: "and"
      data:
        - path: "event_type"
          type: "string"
          value:
            - "baremetal.node.update.end"
  template:
    serviceAccountName: operate-workflow-sa
  triggers:
    - template:
        name: ironic-node-update-trigger
        k8s:
          operation: create
          parameters:
            - dest: spec.arguments.parameters.0.value
              src:
                dataKey: payload.ironic_object\.data.uuid
                dependencyName: ironic-dep
            - dest: spec.arguments.parameters.1.value
              src:
                dataKey: payload.ironic_object\.data.provision_state
                dependencyName: ironic-dep
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: ironic-node-update-
              spec:
                arguments:
                  parameters:
                    - name: device_uuid
                      value: Device UUID
                    - name: provision_state
                      value: Ironic Provision state
                entrypoint: start
                serviceAccountName: workflow
                templates:
                  - name: start
                    steps:
                      - - name: sync-provision-state-to-nautobot
                          templateRef:
                            name: sync-provision-state-to-nautobot
                            template: sync-state
                          arguments:
                            parameters:
                              - name: device_uuid
                                value: "{{workflow.parameters.device_uuid}}"
                              - name: provision_state
                                value: "{{workflow.parameters.provision_state}}"
