---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: keystone-oslo-event
  annotations:
    workflows.argoproj.io/title: Process oslo_events for keystone project
    workflows.argoproj.io/description: |+
      Triggers on the following Keystone Events:

      - identity.project.created
      - other events are silently ignored now

      Resulting code should be very similar to:

      ```
      argo -n argo-events submit --from workflowtemplate/openstack-oslo-event \
      -p event-json "JSON-payload"
      ```

      Defined in `workflows/argo-events/sensors/keystone-project.yaml`
spec:
  dependencies:
  - eventName: notifications
    eventSourceName: openstack-keystone
    name: keystone-dep
    transform:
      # the event is a string-ified JSON so we need to decode it
      # replace the whole event body
      jq: |
        .body = (.body["oslo.message"] | fromjson)
    filters:
      # applies each of the items in data with 'and' but there's only one
      dataLogicalOperator: "and"
      data:
        - path: "body.event_type"
          type: "string"
          value:
            - "identity.project.created"
  template:
    serviceAccountName: sensor-submit-workflow
  triggers:
    - template:
        name: keystone-project
        k8s:
          operation: create
          # edits source section
          parameters:
            # first parameter is the parsed oslo.message
            - dest: spec.arguments.parameters.0.value
              src:
                dataKey: body
                dependencyName: keystone-dep
            - dest: spec.arguments.parameters.1.value
              src:
                dataKey: body.payload.target.id
                dependencyName: keystone-dep
          source:
            # create a workflow in argo-events prefixed with keystone-project-
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: keystone-project-
                namespace: argo-events
              spec:
                serviceAccountName: workflow
                entrypoint: main
                # defines the parameters being replaced above
                arguments:
                  parameters:
                    - name: event-json
                    - name: project_id
                templates:
                - name: main
                  steps:
                  - - name: oslo-events
                      templateRef:
                        name: openstack-oslo-event
                        template: main
                      arguments:
                        parameters:
                        - name: event-json
                          value: "{{workflow.parameters.event-json}}"
                    - name: convert-project-id
                      inline:
                        script:
                          image: python:alpine
                          command: [python]
                          source: |
                              import uuid
                              project_id_without_dashes = "{{workflow.parameters.project_id}}"
                              print(str(uuid.UUID(project_id_without_dashes)))

                  - - name: ansible-to-nautobot
                      when: "{{steps.oslo-events.outputs.parameters.svm_enabled}} == True"
                      inline:
                        container:
                          image: ghcr.io/rss-engineering/undercloud-nautobot/ansible:latest
                          command: [ansible-playbook]
                          args:
                          - "storage_on_svm_create.yml"
                          - --extra-vars
                          - "svm_name=os-{{workflow.parameters.project_id}} project_id={{steps.convert-project-id.outputs.result}} env=dev"
                          - "-i"
                          - "inventory/uc-dev/01-nautobot.yaml"
                            # TODO: this shouldn't be hardcodod to dev, but will work since
                            # it really talks to https://nautobot-default.svc
                          env:
                            - name: NAUTOBOT_TOKEN
                              valueFrom:
                                secretKeyRef:
                                  key: token
                                  name: nautobot-token
