apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: components
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
    applicationsSync: create-update
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchLabels:
                  argocd.argoproj.io/secret-type: cluster
          - list:
              elements:
                - component: dex
                  skipComponent: '{{has "dex" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: https://charts.dexidp.io
                      chart: dex
                      targetRevision: 0.16.0
                      helm:
                        releaseName: dex
                        valuesObject:
                          config:
                            issuer: 'https://dex.{{index .metadata.annotations "dns_zone" }}'
                          env:
                            DNS_ZONE: '{{index .metadata.annotations "dns_zone" }}'
                        valueFiles:
                          - $understack/components/dex/values.yaml
                          - $deploy/{{.name}}/helm-configs/dex.yaml
                        ignoreMissingValueFiles: true
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/dex'
                      ref: understack
                      kustomize:
                        patches:
                          - target:
                              kind: Ingress
                              name: dex
                            patch: |-
                              - op: replace
                                path: /spec/rules/0/host
                                value: dex.{{index .metadata.annotations "dns_zone" }}
                              - op: replace
                                path: /spec/tls/0/hosts/0
                                value: dex.{{index .metadata.annotations "dns_zone" }}
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      ref: deploy
                      path: '{{.name}}/manifests/dex'
                - component: openstack
                  skipComponent: '{{has "openstack" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/openstack'
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      path: '{{.name}}/manifests/openstack'
                - component: undersync
                  skipComponent: '{{has "undersync" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/undersync'
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      path: '{{.name}}/manifests/undersync'
                - component: nautobot
                  skipComponent: '{{has "nautobot" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: https://nautobot.github.io/helm-charts/
                      chart: nautobot
                      targetRevision: 2.1.3
                      helm:
                        releaseName: nautobot
                        valuesObject:
                          ingress:
                            hostname: 'nautobot.{{index .metadata.annotations "dns_zone" }}'
                        valueFiles:
                          - $understack/components/nautobot/nautobot-values.yaml
                          - $deploy/{{.name}}/helm-configs/nautobot.yaml
                        ignoreMissingValueFiles: true
                        fileParameters:
                          - name: nautobot.config
                            # until ArgoCD 2.13.0 is released we cannot use a reference
                            # path: $understack/components/nautobot/nautobot_config.py
                            path: 'https://raw.githubusercontent.com/rackerlabs/understack/{{index .metadata.annotations "uc_repo_ref" }}/components/nautobot/nautobot_config.py'
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/nautobot'
                      ref: understack
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      ref: deploy
                      path: '{{.name}}/manifests/nautobot'
                - component: argo
                  skipComponent: '{{has "argo" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  source:
                    repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                    targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                    path: 'components/argo'
                    kustomize:
                      patches:
                        - target:
                            kind: ConfigMap
                            name: workflow-controller-configmap
                          patch: |-
                            - op: replace
                              path: /data/sso
                              value: |-
                                # This is the root URL of the OIDC provider (required).
                                issuer: https://dex.{{index .metadata.annotations "dns_zone" }}
                                # This defines how long your login is valid for (in hours). (optional)
                                # If omitted, defaults to 10h. Example below is 10 days.
                                sessionExpiry: 240h
                                # This is name of the secret and the key in it that contain OIDC client
                                # ID issued to the application by the provider (required).
                                clientId:
                                  name: argo-sso
                                  key: client-id
                                # This is name of the secret and the key in it that contain OIDC client
                                # secret issued to the application by the provider (required).
                                clientSecret:
                                  name: argo-sso
                                  key: client-secret
                                # This is the redirect URL supplied to the provider (optional). It must
                                # be in the form <argo-server-root-url>/oauth2/callback. It must be
                                # browser-accessible. If omitted, will be automatically generated.
                                redirectUrl: https://workflows.{{index .metadata.annotations "dns_zone"}}/oauth2/callback
                                # Additional scopes to request. Typically needed for SSO RBAC. >= v2.12
                                scopes:
                                  - groups
                                  - email
                                  - profile
                                # RBAC Config. >= v2.12
                                rbac:
                                  enabled: false
                        - target:
                            kind: Ingress
                            name: argo-workflows
                          patch: |-
                            - op: replace
                              path: /spec/rules/0/host
                              value: workflows.{{index .metadata.annotations "dns_zone" }}
                            - op: replace
                              path: /spec/tls/0/hosts/0
                              value: workflows.{{index .metadata.annotations "dns_zone" }}
                - component: argo-events
                  skipComponent: '{{has "argo-events" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/argo-events'
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      path: '{{.name}}/manifests/argo-events'
                - component: understack-workflows
                  componentNamespace: argo-events
                  skipComponent: '{{has "understack-workflows" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'workflows'
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      path: 'workflows'
                - component: chrony
                  componentNamespace: openstack
                  skipComponent: '{{has "chrony" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      path: 'components/chrony'
                - component: openstack-exporter
                  componentNamespace: monitoring
                  skipComponent: '{{has "openstack-exporter" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: registry.scs.community/openstack-exporter
                      chart: prometheus-openstack-exporter
                      targetRevision: 0.4.5
                      helm:
                        releaseName: prometheus-openstack-exporter
                        valueFiles:
                          - $deploy/{{.name}}/helm-configs/openstack-exporter.yaml
                        ignoreMissingValueFiles: true
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      ref: understack
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      ref: deploy
                - component: snmp-exporter
                  componentNamespace: monitoring
                  skipComponent: '{{has "snmp-exporter" ((default "[]" (index .metadata.annotations "uc_skip_components") | fromJson))}}'
                  sources:
                    - repoURL: https://prometheus-community.github.io/helm-charts
                      chart: prometheus-snmp-exporter
                      targetRevision: 5.6.0
                      helm:
                        releaseName: prometheus-snmp-exporter
                        valueFiles:
                          - $deploy/{{.name}}/helm-configs/prometheus-snmp-exporter.yaml
                        ignoreMissingValueFiles: true
                    - repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
                      ref: understack
                    - repoURL: '{{index .metadata.annotations "uc_deploy_git_url"}}'
                      targetRevision: '{{index .metadata.annotations "uc_deploy_ref"}}'
                      ref: deploy
            selector:
              # by setting the key in the elements 'skipComponent' to 'true' it will skip installing it
              # ArgoCD's templating operates with strings so it's the string "true"
              matchExpressions:
                - key: skipComponent
                  operator: NotIn
                  values:
                    - "true"
  template:
    metadata:
      name: '{{.name}}-{{.component}}'
    spec:
      project: default
      destination:
        server: '{{.server}}'
        namespace: '{{coalesce (get . "componentNamespace") .component}}'
      syncPolicy:
        automated:
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - RespectIgnoreDifferences=true
  templatePatch: |
    spec:
      {{- if hasKey . "source" }}
      # indentation matters here. need to collapse to a single line to preserve it
      source: {{ .source | toJson }}
      {{- end }}
      {{- if hasKey . "sources" }}
      sources:
        {{- range $source := .sources }}
        # indentation matters so collapse to single line with toJson to keep it
        - {{ $source | toJson }}
        {{- end }}
      {{- end }}
      {{- if hasKey . "ignoreDifferences" }}
      # indentation matters so collapse to single line with toJson to keep it
      ignoreDifferences: {{ .ignoreDifferences | toJson }}
      {{- end }}
