name: Validate Manifests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install yamllint
      - run: yamllint -c .yamllint.yaml --format github .

  kustomize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v3
      - uses: azure/setup-helm@v4.0.0
      - uses: bmuschko/setup-kubeconform@v1
      - name: validate kustomize with kubeconform
        run: |
          set -o errexit
          set -o pipefail
          items=$(find bootstrap -maxdepth 2 -name kustomization.yaml -exec dirname {} \;)
          items+=($(find operators -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))
          items+=($(find components -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))
          items+=($(find apps -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))

          for item in ${items}; do
            echo "${item}"
            kubectl kustomize --enable-helm "${item}" | \
              kubeconform -skip=Secret -strict -ignore-missing-schemas
          done

  workflows-description:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: thiagodnf/yaml-schema-checker@v0.0.12
        with:
          jsonSchemaFile: argo-workflows/.workflow_with_description.schema.json
          yamlFiles: |
            argo-workflows/workflowtemplates/*.y*ml
            argo-workflows/sensors/*.y*ml
            apps/understack-workflows/workflows/workflowtemplates/*.y*ml
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-shellcheck@v1
