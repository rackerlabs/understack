apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: demo-nautobot-device-tenant-assign
  namespace: argo-events
  annotations:
    workflows.argoproj.io/description: Assign a Nautobot Device to a Tenant
spec:
  serviceAccountName: workflow
  entrypoint: main
  arguments:
    parameters:
      - name: payload
  templates:
    - name: main
      inputs:
        parameters:
          - name: payload
      script:
        image: ghcr.io/rackerlabs/understack/nautobot-interfaces-sync:0.0.1:latest
        command: [python]
        source: |
          import logging
          import argparse
          import pynautobot
          import os
          import json

          logger = logging.getLogger(__name__)
          logging.basicConfig(encoding="utf-8", level=logging.INFO)


          if __name__ == "__main__":
            payload = json.loads('{{inputs.parameters.payload}}')
            device_name = payload["device_name"]
            tenant_name = payload["tenant_name"]
            subnet = payload["subnet"]
            address_ipv4 = payload["address_ipv4"]

            pyn = pynautobot.api(os.environ["NAUTOBOT_URL"], token=os.environ["NAUTOBOT_TOKEN"])

            # TODO: how do we want to identify available devices?
            # for now the device is passed in as part of the payload
            device = pyn.dcim.devices.get(name=device_name)
            if not device:
                raise Exception("Unable to identify target device.")

            tenant = pyn.tenancy.tenants.get(name=tenant_name)
            if not tenant:
                raise Exception("Unable to identify target tenant.")

            # assign device to tenant
            device.update(data={"tenant": tenant})
            logger.info(f"{device.name} has been assigned to tenant {tenant.display}")

        env:
          - name: NAUTOBOT_URL
            valueFrom:
              configMapKeyRef:
                name: nautobot
                key: url
          - name: NAUTOBOT_TOKEN
            valueFrom:
              secretKeyRef:
                name: nautobot-token
                key: token
