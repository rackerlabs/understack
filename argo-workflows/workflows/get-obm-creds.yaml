apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: get-obm-creds
  namespace: argo-events
  annotations:
    workflows.argoproj.io/description: |
      Defined in `argo-workflows/workflows/get-obm-creds.yaml`.
      An example template to return the name of a Kubernetes Secret which containing device's OBM credentials.
spec:
  # garbage collection on the secret is tied to this pod. we remove this pod only after workflow completion to
  # allow access to this secret from subsequent workflow/steps.
  podGC:
    strategy: OnWorkflowCompletion
  serviceAccountName: workflow
  entrypoint: main
  arguments:
    parameters:
      - name: hostname
  templates:
    - name: main
      inputs:
        parameters:
          - name: hostname
      outputs:
        parameters:
          - name: secret
            valueFrom:
              path: "/tmp/output.txt"
      script:
        image: ghcr.io/rackerlabs/understack/argo-utils-python3.11.8:latest
        command: [python]
        source: |
          from argo_python import ArgoWorkflow
          import base64

          SECRET_NAME="example-secret"
          USERNAME="foo"
          PASSWORD="bar"

          data = {
              'username': base64.b64encode(USERNAME.encode("utf-8")).decode(),
              'password': base64.b64encode(PASSWORD.encode("utf-8")).decode(),
          }

          workflow = ArgoWorkflow()
          secret_name = workflow.create_secret(SECRET_NAME, data)
          with open("/tmp/output.txt", "w") as f:
              f.write(secret_name)
        env:
        # pass this Pod's uid into the pod env to make it available to the argo secrets method, otherwise pod get
        # permissions are required for the service account specified above.
        - name: KUBERNETES_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        # only needed in this example Template as it's written using a ScriptTemplate which apparently doesn't seem
        # to honor the workingDir directive, and mounts the above script at /argo/staging/script.
        - name: PYTHONPATH
          value: /app
